#!/usr/bin/env python


from pathlib import Path
import sys, getopt, time, yaml


def main(argv):

    try:
        opts, args = getopt.getopt(argv, 'm:c:w:h:', ['make=', 'compile=', 'write=', 'help='])
    except getopt.GetoptError:
        usage()
        sys.exit(2)

    for opt, arg in opts:

        if opt in set(['-m', '--make']):
            init_config()
            make(arg)
            sys.exit(2)

        elif opt in set(['-c', '--compile']):
            pass

        elif opt in set(['-w', '--write']):
            pass

        elif opt in set(['-h', '--help']):
            pass


def usage():
    print ("Invalid input")


def make(subject):
    print (config)
    print (config('general'))
    # TODO: check existance

def get_config():
    for config_path in config_paths:
        try:
            with open(config_path, 'r') as ymlfile:
                return yaml.load(ymlfile)
        except IOError as e:
            continue
    else:
        return None

def config(key):
    try:
        tmp = None
        for fragment in key.split('.'):
            tmp = tmp[fragment]

        return tmp
    except KeyError as e:
        return key

def init_config():
    global config_dict

    config_dict = get_config()

    if config_dict == None:
        print ("Config file could not be loaded")
        sys.exit(2)

def time_usage(func):
    def wrapper(*args, **kwargs):
        beg_ts = time.time()
        retval = func(*args, **kwargs)
        end_ts = time.time()
        print("elapsed time: %f" % (end_ts - beg_ts))
        return retval
    return wrapper

config_dict = None
homedir = str(Path.home())
config_paths = (
    homedir + '/.config/dosu/config.yaml',
    homedir + '/.dosu.yaml',
    homedir + '/Projekty/DoSU/htdocs/DoSU/config/example.yaml',
)

if __name__ == '__main__':
    main(sys.argv[1:])
